/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-04-04 05:49:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.CH6.requestEX;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class RequestFormBoot_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" \r\n");
      out.write("integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\">\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\" style=\"max-width:600px; \r\n");
      out.write("	border:1px solid #eee; \r\n");
      out.write("	border-radius:5px; \r\n");
      out.write("	margin-top:50px;\r\n");
      out.write("	box-shadow: 0 10px 20px rgba(0,0,0,0.3);\">\r\n");
      out.write("		<p class=\"text-start-fs-1 fw-bold\">Registration</p>\r\n");
      out.write("		<form action=\"requestProcBoot.jsp\" method=\"post\">\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <div class=\"mb-3\">\r\n");
      out.write("    <label for=\"exampleInputEmail1\" class=\"form-label fs-3\">Username</label>\r\n");
      out.write("    <input type=\"text\" class=\"form-control\"\r\n");
      out.write("    		id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n");
      out.write("    		name=\"username\">\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("     <div class=\"mb-3\">\r\n");
      out.write("    <label for=\"exampleInputEmail1\" class=\"form-label fs-3\">E-mail</label>\r\n");
      out.write("    <input type=\"email\" class=\"form-control\"\r\n");
      out.write("    		id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n");
      out.write("    		name=\"email\">\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("     <div class=\"mb-3\">\r\n");
      out.write("    <label for=\"exampleInputEmail1\" class=\"form-label fs-3\">Telephone</label> \r\n");
      out.write("    <input type=\"tel\" class=\"form-control\"\r\n");
      out.write("    		id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n");
      out.write("    		name=\"tel\">\r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("      <div class=\"mb-3\">\r\n");
      out.write("    <label for=\"exampleInputEmail1\" class=\"form-label fs-3\">Hobby</label> \r\n");
      out.write("   <select class=\"form-select\" aria-label=\"Default select example\">\r\n");
      out.write("  <option selected>Swimming</option>\r\n");
      out.write("  <option value=\"1\">walking</option>\r\n");
      out.write("  <option value=\"2\">Breathing</option>\r\n");
      out.write("</select>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("			<!--ctrl + shift + f : 정렬-->\r\n");
      out.write("			<!-- form -> check&radios -->\r\n");
      out.write("			<div class=\"mb-3\">\r\n");
      out.write("				<label for=\"exampleInputEmail1\" class=\"form-label fs-3\">jobs</label>\r\n");
      out.write("				<!-- 체크박스 -->\r\n");
      out.write("				<div class=\"form-check\">\r\n");
      out.write("					<input class=\"form-check-input\"\r\n");
      out.write("							type=\"checkbox\"\r\n");
      out.write("							value=\"Software Engineer\"\r\n");
      out.write("							id=\"flexCheckDefault\"\r\n");
      out.write("							name=\"jobs\">\r\n");
      out.write("						<label class=\"form-check-label\" for=\"flexCheckDefault\"> \r\n");
      out.write("						Software Engineer\r\n");
      out.write("						</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"form-check\">\r\n");
      out.write("					<input class=\"form-check-input\"\r\n");
      out.write("							type=\"checkbox\"\r\n");
      out.write("							value=\"UI/UX Engineer\"\r\n");
      out.write("							id=\"flexCheckDefault\"\r\n");
      out.write("							name=\"jobs\">\r\n");
      out.write("						<label class=\"form-check-label\" for=\"flexCheckDefault\"> \r\n");
      out.write("						UI/UX Engineer\r\n");
      out.write("						</label>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("								<div class=\"form-check\">\r\n");
      out.write("					<input class=\"form-check-input\"\r\n");
      out.write("							type=\"checkbox\"\r\n");
      out.write("							value=\"AI Engineer\"\r\n");
      out.write("							id=\"flexCheckDefault\"\r\n");
      out.write("							name=\"jobs\">\r\n");
      out.write("						<label class=\"form-check-label\" for=\"flexCheckDefault\"> \r\n");
      out.write("						AI Engineer\r\n");
      out.write("						</label>\r\n");
      out.write("				</div>\r\n");
      out.write("						\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">확인</button>	\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">취소</button>\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
