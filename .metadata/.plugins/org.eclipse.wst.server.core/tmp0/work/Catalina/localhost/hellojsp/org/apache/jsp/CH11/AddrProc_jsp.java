/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-05-23 07:16:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.CH11;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AddrProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h2> addrProc.jsp () </h2>\r\n");
      out.write("	");

		//한글 깨짐 방지
		request.setCharacterEncoding("utf-8");
		
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		<!-- 입력한 값을 Do에 한방에 받음!! -->\r\n");
      out.write("		");
      addrBook.addressDo ado = null;
      ado = (addrBook.addressDo) _jspx_page_context.getAttribute("ado", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (ado == null){
        ado = new addrBook.addressDo();
        _jspx_page_context.setAttribute("ado", ado, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("ado"), request);
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		<!-- Dao클래스를 이용하여 입력값을 저장(insertAddr()) -->\r\n");
      out.write("		");
      addrBook.addressDao adao = null;
      adao = (addrBook.addressDao) _jspx_page_context.getAttribute("adao", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (adao == null){
        adao = new addrBook.addressDao();
        _jspx_page_context.setAttribute("adao", adao, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		");
 
		//체크박스 처리(여러개 테이터가 전달될 경우, 모두 저장하기 위한 처리)
		String[] job = request.getParameterValues("job");
		String jobText = "";
		for(int i =0; i < job.length; i++) {
			jobText += job[i] + "";
		}
		//out.println("jobText : " + jobText);
		
		//ado의 job의 값을 jobText 값으로 변경...
		ado.setJob(jobText);

		//입력한 데이터 저장 DAO이동)...
		adao.insertAddr(ado);
			
        
      out.write("\r\n");
      out.write("        		<a href =\"AddrList.jsp\"> 전체 주소록 보기 </a>\r\n");
      out.write("        \r\n");
      out.write("        		<table border=\"1\">\r\n");
      out.write("			<tr height=\"50\" align=\"center\">\r\n");
      out.write("				<td width=\"100\"> 사용자 이름 </td>\r\n");
      out.write("				<td width=\"300\">\r\n");
      out.write("					<!-- input type=\"text\" name=\"name\">-->\r\n");
      out.write("					");
      out.print( ado.getName() );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr height=\"50\" align=\"center\">\r\n");
      out.write("				<td width=\"100\"> 전화번호 </td>\r\n");
      out.write("				<td width=\"300\">\r\n");
      out.write("					<!-- <input type=\"text\" name=\"tel\"> -->\r\n");
      out.write("					");
      out.print( ado.getTel() );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("				<tr height=\"50\" align=\"center\">\r\n");
      out.write("				<td width=\"100\"> 이메일 </td>\r\n");
      out.write("				<td width=\"200\">\r\n");
      out.write("					 <!-- <input type=\"text\" name=\"email\"> -->\r\n");
      out.write("					");
      out.print( ado.getName() );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("				<tr height=\"50\" align=\"center\">\r\n");
      out.write("				<td width=\"100\"> 취미 </td>\r\n");
      out.write("				<td width=\"300\">\r\n");
      out.write("					<!-- <input type=\"text\" name=\"hobby\"> -->\r\n");
      out.write("					<!-- <select name=:\"hobby\">\r\n");
      out.write("						<option value=\"tennis\"> 테니스 </option>\r\n");
      out.write("						<option value =\"run\"> 달리기 </option>\r\n");
      out.write("						<option value =\"eat\"> 먹기 </option>\r\n");
      out.write("						</select> -->\r\n");
      out.write("						");
      out.print( ado.getHobby() );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("				<tr height=\"50\" align=\"center\">\r\n");
      out.write("				<td width=\"100\"> 직업 </td>\r\n");
      out.write("				<td width=\"300\">\r\n");
      out.write("					<!-- <input type=\"text\" name=\"job\"> -->\r\n");
      out.write("					<!-- <input type =\"checkbox\" name=\"job\" value=\"웹백엔드\"> 웹백엔드\r\n");
      out.write("					<input type =\"checkbox\" name=\"job\" value=\"웹프론드\"> 웹프론트\r\n");
      out.write("					<input type =\"checkbox\" name=\"job\" value=\"UI/UX\"> UI/UX -->\r\n");
      out.write("					");
      out.print( jobText );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		\r\n");
      out.write("		</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
